apply plugin: 'com.android.application'
android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }

    dataBinding {
        enabled = true
    }
//在android下添加这个一个sourceSets.main
//  sourceSets {
//    main {
////      java.srcDirs = ['src']
////      resources.srcDirs = ['src']
////      aidl.srcDirs = ['src']
////      renderscript.srcDirs = ['src']
////      res.srcDirs = ['res']
////      assets.srcDirs = ['assets']
////      jniLibs.srcDirs = ['libs']
//      assets.srcDirs = ['assets']
//      jniLibs.srcDirs = ['libs']
//
//    }
//  }


    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            manifest.srcFile 'src/main/AndroidManifest.xml'
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/libs']
        }
    }



    packagingOptions {
//        exclude 'LICENSE.txt'
//        exclude 'META-INF/DEPENDENCIES'
//        exclude 'META-INF/ASL2.0'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/LICENSE.txt'

            exclude 'the META-INF / DEPENDENCIES'
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'the META-INF / LICENSE'
            exclude 'the META-INF / LICENSE.txt'
            exclude 'the META-INF / license.txt'
            exclude 'the META-INF / NOTICE'
            exclude 'the META-INF / the NOTICE.txt '
            exclude ' the META-INF / NOTICE.txt '
            exclude ' the META-INF / ASL2.0 '
            exclude ' the META-INF / Services / javax.annotation.processing.Processor '

    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/flyantsf.keystore')
            storePassword 'flyant0909'
            keyAlias 'flyantsf'
            keyPassword 'flyant0909'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            zipAlignEnabled true
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
//repositories {
//    jcenter()
//    mavenCentral()  // GPUImage for Android
//}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    //    compile presentationDependencies.retrofit
    //    compile presentationDependencies.converterGson
    //    compile presentationDependencies.adapterRxjava
   // compile 'com.android.support:recyclerview-v7:23.+'
      compile presentationDependencies.recyclerView
    //    compile presentationDependencies.rxJava
    //    compile presentationDependencies.rxAndroid
    //    compile presentationDependencies.glide


    /*添加包，support包*/
    compile 'com.android.support:support-v4:23.+'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'



    /***可以直接使用三个包进入数据请求***/
    //    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    //    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    //    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    //retrofit，gson，rxAndroid，rxJava实现 超级网络数据请求    ///Android Retrofit RxJava实现缓存//http://blog.csdn.net/jdsjlzx/article/details/52108825
    //添加Retrofit2库
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    //在Retrofit2中是用Gson解析的，所以我们要在build.gradle中添加。
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    //引入RxJava支持 (版本号要一致)
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    //json解析或生成包  在使用com.squareup.retrofit2:converter-gson:2.1.0包就包含有gson包了
    //compile 'com.google.code.gson:gson:2.7'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'io.reactivex:rxandroid:1.2.1'
    //设置网络数据请求时打印
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.0-RC1'
    //支持加载更多的RecyclerView的开源库
    //  compile 'com.chanven.lib:cptr:1.0.0'
    //RecyclerView列表的适配器
    compile 'me.tatarka.bindingcollectionadapter:bindingcollectionadapter:1.3.0'
    compile 'me.tatarka.bindingcollectionadapter:bindingcollectionadapter-recyclerview:1.3.0'
    //compile 'com.nineoldandroids:library:2.4.0'//// 兼容3.0以前版本的属性动画库,jakewharton大神良心之作
    /*弹出一个加载网络数据进度的提示*/
    compile 'cn.pedant.sweetalert:library:1.3'
    //精仿iOSAlertViewController控件
    compile 'com.bigkoo:alertview:1.0.2'
    //图片压缩工具包
    compile 'id.zelory:compressor:1.0.2'

//    compile 'com.github.chrisbanes.photoview:library:1.2.2'// 多点触控放大缩小图片的库
//    compile 'com.afollestad:material-dialogs:0.7.9.1'// 材料化对话框库
//    compile 'de.greenrobot:eventbus:2.4.0'// 事件总线库

    //加载本地包
    compile fileTree(include: '*.jar', dir: 'libs')
	
	
	//   Android酷炫实用的开源框架（UI框架）
	//http://blog.csdn.net/fancylovejava/article/details/45787729
	
	
	
}